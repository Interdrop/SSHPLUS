#!/bin/bash
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/sshplus ]] && rm -rf /bin/menu > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\e[33;3m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\e[31;3m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\e[33;3m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\e[33;3m["
done
echo -e "\e[33;3m]\033[1;37m -\033[1;34m OK !\033[1;37m"
tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu ()
{
velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -d /etc/SSHPlus ]] && rm -rf /bin/menu
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \e[33;3mAGUARDE \033[1;37m- \e[33;3m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\e[31;3m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\e[33;3m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \e[33;3mAGUARDE \033[1;37m- \e[33;3m["
done
echo -e "\e[33;3m]\033[1;37m -\033[1;34m OK !\033[1;37m"
tput cnorm
}
fun_tst () {
speedtest --share > speed
}
echo ""
echo -e "   \033[1;34mTESTEANDO LA VELOCIDAD DEL SERVIDOR !\033[0m"
echo ""
aguarde 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;34mPING (LATENCIA):\033[1;37m$png"
echo -e "\033[1;34mDOWNLOAD:\033[1;37m$down"
echo -e "\033[1;34mUPLOAD:\033[1;37m$upl"
echo -e "\033[1;34mLINK: \e[1;32m$lnk\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
rm -rf $HOME/speed
}
#limiter
function limit1 () {
   clear
   echo -e "\n\033[1;34mINICIANDO EL LIMITADOR... \033[0m"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;34m  LIMITADOR DE USUARIOS ACTIVO !\033[0m"
   sleep 3
   menu
}
function limit2 () {
   clear
   echo -e "\033[1;34mDETENIENDO EL LIMITADOR DE USUARIOS... \033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "\n\e[31;3m LIMITADOR DETENIDO !\033[0m"
   sleep 3
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}
#onlineapp
function onapp1 () {
   clear
   echo -e "\n\033[1;34mINICIANDO O ONLINE APP... \033[0m"
   echo ""
   apt install apache2 -y > /dev/null 2>&1
   sed -i "s/Listen 80/Listen 8888/g" /etc/apache2/ports.conf >/dev/null 2>&1
   service apache2 restart
   rm -rf /var/www/html/server >/dev/null 2>&1
   mkdir /var/www/html/server >/dev/null 2>&1
   fun_bar 'screen -dmS onlineapp onlineapp' 'sleep 3'
   [[ $(grep -wc "onlineapp" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   } || {
       sed -i '/onlineapp/d' /etc/autostart
	   echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   }
   IP=$(wget -qO- ipv4.icanhazip.com) >/dev/null 2>&1
   echo -e "\n\033[1;34m  ONLINE APP ACTIVO !\033[0m"
   echo -e "\e[31;3m \e[33;3mURL de Usuários Online para usar en APP\033[0m"
   echo -e " http://$IP:8888/server/online"
   sleep 10
   menu
}
function onapp2 () {
   clear
   echo -e "\033[1;34mDETENIENDO ONLINE APP... \033[0m"
   echo ""
   fun_stponlineapp () {
      sleep 1
      screen -r -S "onlineapp" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "onlineapp" /etc/autostart) != '0' ]] && {
          sed -i '/onlineapp/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stponlineapp' 'sleep 3'
   rm -rf /var/www/html/server >/dev/null 2>&1
   echo -e "\n\e[31;3m ONLINE APP DETENIDO !\033[0m"
   sleep 3
   menu
}
function onapp_ssh () {
[[ $(ps x | grep "onlineapp"|grep -v grep |wc -l) = '0' ]] && onapp1 || onapp2
}
##
function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;34mDESACTIVANDO AUTO EJECUCIÓN\033[0m"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\e[31;3mAUTO EJECUCIÓN DESACTIVADO!\033[0m"
      sleep 1.5s
      menu2
   else
      clear
      echo -e "\033[1;34mACTIVANDO AUTO EJECUCIÓN\033[0m"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;34mAUTO EJECUCIÓN ACTIVADO!\033[0m"
      sleep 1.5s
      menu2
   fi

}
#menu2
menu2 (){
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;34m◉ ") || stsf=$(echo -e "\e[31;3m○ ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;34m◉ " || echo -e "\e[31;3m○ ")
stsbotteste=$(ps x | grep "bot_teste"|grep -v grep > /dev/null && echo -e "\033[1;34m◉ " || echo -e "\e[31;3m○ ")
stsbotrev=$(ps x | grep "bot_rev"|grep -v grep > /dev/null && echo -e "\033[1;34m◉ " || echo -e "\e[31;3m○ ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;34m◉ " || echo -e "\e[31;3m○ ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[41;1;37m       SSHGO MANAGER 1.0 BY @INTERDROP       \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;34mSISTEMA            MEMORIA RAM      PROCESADOR "
echo -e "\e[31;3mOS: \033[1;37m$_system \e[31;3mTotal:\033[1;37m$_ram \e[31;3mNucleos: \033[1;37m$_core\033[0m"
echo -e "\e[31;3mHora: \033[1;37m$_hora     \e[31;3mEm uso: \033[1;37m$_usor \e[31;3mEm uso: \033[1;37m$_usop\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
[[ ! -e /tmp/att ]]  && {
    echo -e "\033[1;34mOnlines:\033[1;37m $_onlin     \e[31;3mExpirados: \033[1;37m$_userexp \e[33;3mTotal: \033[1;37m$_tuser\033[0m"
    var01='\033[1;37m•'
} || {
    echo -e "  \e[33;3m[\e[31;3m!\e[33;3m]  \033[1;34mEXISTE UNA ACTUALIZACIÓN DISPONIBLE  \e[33;3m[\e[31;3m!\e[33;3m]\033[0m"
    var01="\033[1;34m!"
}
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -e "\e[31;3m[\e[1;32m21\e[31;3m] \033[1;37m• \e[33;3mADICIONAR HOST \e[31;3m     [\e[1;32m28\e[31;3m] \033[1;37m• \e[33;3mMUDAR CONTRASEÑA ROOT \e[31;3m
[\e[1;32m22\e[31;3m] \033[1;37m• \e[33;3mREMOVER HOST \e[31;3m       [\e[1;32m29\e[31;3m] \033[1;37m• \e[33;3mAUTO EJECUTAR SSHGO $autm \e[31;3m
[\e[1;32m23\e[31;3m] \033[1;37m• \e[33;3mREINICIAR SISTEMA \e[31;3m  [\e[1;32m30\e[31;3m] $var01 \e[33;3mACTUALIZAR SCRIPT \e[31;3m
[\e[1;32m24\e[31;3m] \033[1;37m• \e[33;3mREINICIAR SERVICOS \e[31;3m [\e[1;32m31\e[31;3m] \033[1;37m• \e[33;3mREMOVER SCRIPT \e[31;3m
[\e[1;32m25\e[31;3m] \033[1;37m• \e[33;3mBLOCK TORRENT $stsf\e[31;3m    [\e[1;32m32\e[31;3m] \033[1;37m• \e[33;3mBOT REVENTA $stsbotrev\e[31;3m
[\e[1;32m26\e[31;3m] \033[1;37m• \e[33;3mBOT TELEGRAM $stsbot\e[31;3m     [\e[1;32m33\e[31;3m] \033[1;37m• \e[33;3mVOLTAR \033[1;34m<\e[33;3m<\e[31;3m< \e[31;3m
[\e[1;32m27\e[31;3m] \033[1;37m• \e[33;3mBOT PRUEBA $stsbotteste\e[31;3m        [\e[1;32m00\e[31;3m] \033[1;37m• \e[33;3mSALIR \033[1;34m<\e[33;3m<\e[31;3m<\e[31;3m"
echo ""
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -ne "\033[1;34mQUE DESEA HACER \e[33;3m?\e[31;3m?\033[1;37m : "; read x
case "$x" in
   21)
   clear
   addhost
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar ao \033[1;34mMENU!\033[0m"; read
   menu2
   ;;
   22)
   clear
   delhost
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar ao \033[1;34mMENU!\033[0m"; read
   menu2
   ;;
   23)
   clear
   reiniciarsistema
   ;;
   24)
   clear
   reiniciarservicos
   sleep 3
   ;;
   25)
   blockt
   ;;
   26)
   botssh
   ;;
   27)
   botteste.sh
   ;;
   28)
   clear
   senharoot
   sleep 3
   ;;
   29)
   autoexec
   ;;
   30)
   attscript
   ;;
   31)
   clear
   delscript
   ;;
   32)
   clear
   initbot
   ;;
   33)
   menu
   ;;
   0|00)
   echo -e "\e[31;3mSaliendo...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\e[31;3mOpción inválida !\033[0m"
   sleep 2
esac
}
while true $x != "ok"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;34m◉ " || echo -e "\e[31;3m○ ")
stson=$(ps x | grep "onlineapp"|grep -v grep > /dev/null && echo -e "\033[1;34m◉ " || echo -e "\e[31;3m○ ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;34m◉ " || echo -e "\e[31;3m○ ")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[41;1;37m       ⇱ SSHGO MANAGER 1.0 BY @INTERDROP ⇲       \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;34mSISTEMA            MEMÓRIA RAM      PROCESSADOR "
echo -e "\e[31;3mOS: \033[1;37m$_system \e[31;3mTotal:\033[1;37m$_ram \e[31;3mNucleos: \033[1;37m$_core\033[0m"
echo -e "\e[31;3mHora: \033[1;37m$_hora     \e[31;3mEm uso: \033[1;37m$_usor \e[31;3mEm uso: \033[1;37m$_usop\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;34mOnlines:\033[1;37m $_onlin     \e[31;3mExpirados: \033[1;37m$_userexp \e[33;3mTotal: \033[1;37m$_tuser\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -e "\e[31;3m[\e[1;32m01\e[31;3m] \033[1;37m• \e[33;3mCREAR USUARIO \e[31;3m            [\e[1;32m11\e[31;3m] \033[1;37m• \e[33;3mSPEEDTEST \e[31;3m
[\e[1;32m02\e[31;3m] \033[1;37m• \e[33;3mCREAR USUARIO TEMPORAL \e[31;3m   [\e[1;32m12\e[31;3m] \033[1;37m• \e[33;3mBANNER \e[31;3m
[\e[1;32m03\e[31;3m] \033[1;37m\033[1;37m• \e[33;3mREMOVER USUARIO \e[31;3m          [\e[1;32m13\e[31;3m] \033[1;37m• \e[33;3mTRAFICO \e[31;3m
[\e[1;32m04\e[31;3m] \033[1;37m• \e[33;3mMONITOR ONLINE \e[31;3m           [\e[1;32m14\e[31;3m] \033[1;37m• \e[33;3mOPTIMIZAR \e[31;3m
[\e[1;32m05\e[31;3m] \033[1;37m• \e[33;3mMODIFICAR FECHAS \e[31;3m         [\e[1;32m15\e[31;3m] \033[1;37m• \e[33;3mBACKUP \e[31;3m
[\e[1;32m06\e[31;3m] \033[1;37m• \e[33;3mALTERAR LIMITE \e[31;3m           [\e[1;32m16\e[31;3m] \033[1;37m• \e[33;3mMEMORIA VIRTUAL\e[31;3m
[\e[1;32m07\e[31;3m] \033[1;37m• \e[33;3mMODIFICAR CONTRASEÑA \e[31;3m     [\e[1;32m17\e[31;3m] \033[1;37m• \e[33;3mLIMITER $stsl\e[31;3m
[\e[1;32m08\e[31;3m] \033[1;37m• \e[33;3mELIMINAR EXPIRADOS \e[31;3m       [\e[1;32m18\e[31;3m] \033[1;37m• \e[33;3mBAD VPN PRO $stsu\e[31;3m
[\e[1;32m09\e[31;3m] \033[1;37m• \e[33;3mMOSTRAR LOS USUARIOS \e[31;3m     [\e[1;32m19\e[31;3m] \033[1;37m• \e[33;3mONLINE APP $stson\e[31;3m
[\e[1;32m10\e[31;3m] \033[1;37m• \e[33;3mMODOS DE CONEXIÓN \e[31;3m        [\e[1;32m20\e[31;3m] \033[1;37m• \e[33;3mINFO VPS \e[31;3m>\e[33;3m>\033[1;34m>\033[0m\e[31;3m
[\e[1;32m00\e[31;3m] \033[1;37m• \e[33;3mSALIR \e[31;3m                    [\e[1;32m21\e[31;3m] \033[1;37m• \e[33;3mMAS \e[31;3m>\e[33;3m>\033[1;34m>\033[0m\e[31;3m"
echo ""
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -ne "\033[1;34mELIGE UNA OPCIÓN \033[1;37m : "; read x

case "$x" in 
   1 | 01)
   clear
   criarusuario
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar al \033[1;34mMENU!\033[0m"; read
   ;;
   2 | 02)
   clear
   criarteste
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar al \033[1;34mMENU!\033[0m"; read
   ;;
   3 | 03)
   clear
   remover
   sleep 3
   ;;
   4 | 04)
   clear
   sshmonitor
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar ao \033[1;34mMENU!\033[0m"; read
   ;;      
   5 | 05)
   clear
   mudardata
   sleep 3
   ;;
   6 | 06)
   clear
   alterarlimite
   sleep 3
   ;; 
   7 | 07)
   clear
   alterarsenha
   sleep 3
   ;;
   8 | 08)
   clear
   expcleaner
   echo ""
   sleep 3
   ;;     
   9 | 09)
   clear
   infousers
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar al \033[1;34mMENU!\033[0m"; read
   ;;
   10)
   conexao
   exit;
   ;;
   11)
   clear
   velocity
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar al \033[1;34mMENU!\033[0m"; read
   ;;
   12)
   clear
   banner
   sleep 3
   ;;
   13)
   clear
   echo -e "\033[1;34mPARA SAIR CLICK CTRL + C\e[1;32m"
   sleep 4
   nload
   ;;
   14)
   clear
   otimizar
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar al \033[1;34mMENU!\033[0m"; read
   ;;
   15)
   userbackup
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar al \033[1;34mMENU!\033[0m"; read
   ;;
   16)
   swapmemory
   ;;
   17)
   limit_ssh
   ;;
   18)
   clear
   badvpn
   exit;
   ;;
   19)
   onapp_ssh
   ;;
   20)
   clear
   detalhes
   echo -ne "\n\e[31;3mENTER \e[33;3mpara retornar ao \033[1;34mMENU!\033[0m"; read
   ;;
   21)
   menu2
   ;;
   0 | 00)
   echo -e "\e[31;3mSaliendo...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\e[31;3mOpción inválida !\033[0m"
   sleep 2
esac
done
}
menu
#fim
